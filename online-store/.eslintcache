[{"C:\\Users\\Samuel\\online-store\\src\\index.js":"1","C:\\Users\\Samuel\\online-store\\src\\App.js":"2","C:\\Users\\Samuel\\online-store\\src\\components\\Navigationbar.js":"3","C:\\Users\\Samuel\\online-store\\src\\components\\Footer.js":"4","C:\\Users\\Samuel\\online-store\\src\\components\\Contents.js":"5","C:\\Users\\Samuel\\online-store\\src\\components\\Login.js":"6","C:\\Users\\Samuel\\online-store\\src\\components\\Register.js":"7","C:\\Users\\Samuel\\online-store\\src\\components\\Basket.js":"8","C:\\Users\\Samuel\\online-store\\src\\components\\AboutUs.js":"9","C:\\Users\\Samuel\\online-store\\src\\services\\registerService.js":"10","C:\\Users\\Samuel\\online-store\\src\\services\\loginService.js":"11","C:\\Users\\Samuel\\online-store\\src\\components\\MainPage.js":"12","C:\\Users\\Samuel\\online-store\\src\\components\\ContentPage.js":"13","C:\\Users\\Samuel\\online-store\\src\\util\\addBasket.js":"14","C:\\Users\\Samuel\\online-store\\src\\services\\itemService.js":"15"},{"size":434,"mtime":1610387805159,"results":"16","hashOfConfig":"17"},{"size":1498,"mtime":1614622419374,"results":"18","hashOfConfig":"17"},{"size":2659,"mtime":1616016121545,"results":"19","hashOfConfig":"17"},{"size":1320,"mtime":1611666232608,"results":"20","hashOfConfig":"17"},{"size":1637,"mtime":1616059736296,"results":"21","hashOfConfig":"17"},{"size":2372,"mtime":1612130680400,"results":"22","hashOfConfig":"17"},{"size":3248,"mtime":1611666610496,"results":"23","hashOfConfig":"17"},{"size":3141,"mtime":1616060208751,"results":"24","hashOfConfig":"17"},{"size":524,"mtime":1616060245388,"results":"25","hashOfConfig":"17"},{"size":232,"mtime":1612130720877,"results":"26","hashOfConfig":"17"},{"size":223,"mtime":1612130628345,"results":"27","hashOfConfig":"17"},{"size":946,"mtime":1616010060531,"results":"28","hashOfConfig":"17"},{"size":2562,"mtime":1616010509513,"results":"29","hashOfConfig":"17"},{"size":452,"mtime":1614629416485,"results":"30","hashOfConfig":"17"},{"size":368,"mtime":1616009661181,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"6irxxg",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"34"},"C:\\Users\\Samuel\\online-store\\src\\index.js",[],["68","69"],"C:\\Users\\Samuel\\online-store\\src\\App.js",[],"C:\\Users\\Samuel\\online-store\\src\\components\\Navigationbar.js",[],"C:\\Users\\Samuel\\online-store\\src\\components\\Footer.js",[],"C:\\Users\\Samuel\\online-store\\src\\components\\Contents.js",[],"C:\\Users\\Samuel\\online-store\\src\\components\\Login.js",["70"],"import Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport Navigationbar from './Navigationbar'\r\nimport loginService from '../services/loginService'\r\nimport {useState} from 'react'\r\n\r\n//TODO: Add remember me\r\nconst Login = (props) => {\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [show, setShow] = useState(false) //Notification\r\n  const [userOne, setUser] = useState(null) //TODO: Add function\r\n\r\n  const loginUser = async (event) => {\r\n    event.preventDefault()\r\n      try {\r\n        console.log(\"logging in\")\r\n        const user = await loginService({\r\n          email, password,\r\n        })\r\n        setUser(user)\r\n        setEmail(\"\")\r\n        setPassword(\"\")\r\n        props.onLogin(user) \r\n      } catch (exception) {\r\n        setShow(true)\r\n      }\r\n  }\r\n\r\n  const Notification = () => {       \r\n    if (show) {\r\n      return (\r\n        <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\r\n          <Alert.Heading>Email or password wrong</Alert.Heading>\r\n          <p>\r\n            Please use another email or password\r\n          </p>\r\n        </Alert>\r\n      );\r\n    } else {\r\n      return <> </>\r\n    }\r\n  }\r\n\r\n   return(   \r\n     <> \r\n    <Navigationbar/> \r\n      <Container className=\"loginRStyle\">\r\n        <Notification/>\r\n        <h2>Login</h2>\r\n        <Form className=\"loginStyle\" onSubmit={loginUser}>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control type=\"email\" placeholder=\"Enter email\" \r\n            onChange={({ target }) => setEmail(target.value)}\r\n          />        \r\n        </Form.Group>\r\n      \r\n        <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control type=\"password\" placeholder=\"Password\" \r\n            onChange={({ target }) => setPassword(target.value)}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formBasicCheckbox\">\r\n          <Form.Check type=\"checkbox\" label=\"Remember me\" />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n        </Form>\r\n      </Container>\r\n     \r\n    </>\r\n   )\r\n}\r\nexport default Login","C:\\Users\\Samuel\\online-store\\src\\components\\Register.js",["71"],"import Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Navigationbar from './Navigationbar'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport registerService from '../services/registerService'\r\nimport {useState} from 'react'\r\n\r\nconst Register = () => {\r\n    const [firstName, setFirstname] = useState(\"\")\r\n    const [lastName, setLastname] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [show, setShow] = useState(false) //Notification\r\n    const [user, setUser] = useState(null)  //TODO: Use data of user\r\n    \r\n    const addUser = async (event) => {\r\n      event.preventDefault()\r\n      try {\r\n        console.log('form sent', event.target)\r\n        const user = await registerService.register({firstName, lastName, email, password})\r\n        //Clear all fields after success\r\n        setFirstname(\"\")\r\n        setLastname(\"\")\r\n        setEmail(\"\")\r\n        setPassword(\"\")\r\n        setUser(user)\r\n        console.log(user)\r\n      } catch (exception) {\r\n        //TODO: Implement props to notification\r\n        setShow(true)\r\n      }\r\n    }\r\n    \r\n    const Notification = () => {       \r\n      if (show) {\r\n        return (\r\n          <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\r\n            <Alert.Heading>Email already in use</Alert.Heading>\r\n            <p>\r\n              Please use another email\r\n            </p>\r\n          </Alert>\r\n        );\r\n      } else {\r\n        return <> </>\r\n      }\r\n    }\r\n\r\n    return (   \r\n     <> \r\n    <Navigationbar/>  \r\n      <Container className=\"loginRStyle\">\r\n        <Notification />\r\n        <h2>Create a user</h2>\r\n        <Form onSubmit={addUser}>\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Row>\r\n                  <Col>\r\n                  <Form.Label>First name</Form.Label>\r\n                  <Form.Control placeholder=\"First name\" \r\n                    onChange={({ target }) => setFirstname(target.value)}\r\n                  />\r\n                  </Col>\r\n                  <Col>\r\n                  <Form.Label>Last name</Form.Label>\r\n                  <Form.Control placeholder=\"Last name\" \r\n                    onChange={({ target }) => setLastname(target.value)}\r\n                  />\r\n                  </Col>\r\n              </Form.Row>        \r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control type=\"email\" placeholder=\"Enter email\" \r\n              onChange={({ target }) => setEmail(target.value)}\r\n            />\r\n          </Form.Group>\r\n        \r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control type=\"password\" placeholder=\"Password\" \r\n              onChange={({ target }) => setPassword(target.value)}\r\n            />\r\n            \r\n          </Form.Group>\r\n          \r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </Container>\r\n    </>\r\n   )\r\n}\r\nexport default Register","C:\\Users\\Samuel\\online-store\\src\\components\\Basket.js",[],"C:\\Users\\Samuel\\online-store\\src\\components\\AboutUs.js",[],"C:\\Users\\Samuel\\online-store\\src\\services\\registerService.js",[],"C:\\Users\\Samuel\\online-store\\src\\services\\loginService.js",[],"C:\\Users\\Samuel\\online-store\\src\\components\\MainPage.js",["72"],"import React, {useState, useEffect} from 'react'\r\nimport Navigationbar from '../components/Navigationbar'\r\nimport Contents from '../components/Contents'\r\nimport addBasket from '../util/addBasket'\r\nimport itemService from '../services/itemService'\r\n\r\nconst MainPage = () => {\r\n    const [itemCount, setItemCount] = useState(0) //TODO: Functioning\r\n    const [items, setItems] = useState([{name: \"obj1\", price: 200, available: 0, id: 1}])\r\n    const itemToCart = (item) => {\r\n        setItemCount(addBasket(item))\r\n    }\r\n\r\n    //Initiate items from DB\r\n    useEffect(() => {   \r\n        itemService.getAllItems().then(res => {\r\n            console.log(res)\r\n            setItems(res)\r\n        })\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <Navigationbar/>\r\n            <Contents itemToCart={itemToCart} items={items}/>\r\n        </>     \r\n    )\r\n}\r\nexport default MainPage\r\n","C:\\Users\\Samuel\\online-store\\src\\components\\ContentPage.js",["73"],"import React, {useState, useEffect} from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport Card from 'react-bootstrap/Card'\r\nimport ListGroupItem from 'react-bootstrap/ListGroupItem'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Navigationbar from '../components/Navigationbar'\r\nimport addBasket from '../util/addBasket'\r\nimport itemService from '../services/itemService'\r\nimport {useParams} from \"react-router-dom\"  \r\n\r\nconst ContentPage = (props) => {\r\n    const [itemCount, setItemCount] = useState(0) //TODO: Functioning\r\n    const [item, setItem] = useState({name: \"obj1\", price: 200, available: 0, id: useParams().id})\r\n    //TODO: TEMP\r\n    const addItem = (item) => {\r\n        setItemCount(addBasket(item))\r\n      }\r\n    useEffect(() => {   \r\n        console.log(item)\r\n        itemService.itemById(item.id).then(res => {\r\n          console.log(res)\r\n          setItem(res)\r\n        })\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n    const Item = () => {   \r\n        console.log(\"id of item:\", useParams().id)\r\n        return (\r\n            <Row className=\"cardCenter\" lg=\"2\">\r\n            <Card style={{ width: '30rem' }}>\r\n            <Card.Body>\r\n                <Card.Img variant=\"top\" src=\"/images/empty.jpg\" alt=\"\" />\r\n            </Card.Body>\r\n            <ListGroup className=\"list-group-flush\">\r\n              <ListGroupItem>Cras justo odio</ListGroupItem>\r\n              <ListGroupItem>Dapibus ac facilisis in</ListGroupItem>\r\n              <ListGroupItem>Vestibulum at eros</ListGroupItem>\r\n            </ListGroup>         \r\n          </Card>\r\n          <Card style={{ width: '30rem' }}>\r\n          <Card.Body style={{ position: 'relative'}}>\r\n            <Card.Title>{item.name}</Card.Title>\r\n            <Card.Text>\r\n              Some quick example text to build on the card title and make up the bulk of\r\n              the card's content.\r\n            </Card.Text>\r\n            <Card.Title className=\"pricePos\">{item.price}€</Card.Title>\r\n            <Button className=\"basketPos\" variant=\"primary\" onClick={()=>{addItem(item)}}>\r\n              Add to basket\r\n            </Button>\r\n          </Card.Body>         \r\n        </Card>\r\n        </Row>\r\n        )     \r\n    }\r\n\r\n    return (    \r\n        <>\r\n            <Navigationbar/>  \r\n            <Container>                            \r\n                <Item/>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\nexport default ContentPage","C:\\Users\\Samuel\\online-store\\src\\util\\addBasket.js",[],"C:\\Users\\Samuel\\online-store\\src\\services\\itemService.js",["74"],"import axios from 'axios'\r\n\r\nconst itemById = async id => {\r\nconst url = `http://localhost:3001/items/${id}`\r\n  const response = await axios.get(url)\r\n  return response.data\r\n}\r\n\r\nconst getAllItems = async () => {\r\n  const url = `http://localhost:3001/items`\r\n  const response = await axios.get(url)\r\n  return response.data\r\n}\r\n\r\nexport default {itemById, getAllItems}",{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":14,"column":10,"nodeType":"81","messageId":"82","endLine":14,"endColumn":17},{"ruleId":"79","severity":1,"message":"83","line":16,"column":12,"nodeType":"81","messageId":"82","endLine":16,"endColumn":16},{"ruleId":"79","severity":1,"message":"84","line":8,"column":12,"nodeType":"81","messageId":"82","endLine":8,"endColumn":21},{"ruleId":"79","severity":1,"message":"84","line":14,"column":12,"nodeType":"81","messageId":"82","endLine":14,"endColumn":21},{"ruleId":"85","severity":1,"message":"86","line":15,"column":1,"nodeType":"87","endLine":15,"endColumn":39},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'userOne' is assigned a value but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'itemCount' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]